name: Update ECS Services

on:
  workflow_dispatch:
    inputs:
      image_uri:
        description: 'New image URI to deploy'
        required: true
        pattern: '^[0-9a-zA-Z./_-]+:[0-9a-zA-Z._-]+$'

env:
  ENV_FILE_NAME: '.env'
  S3_ENV_BUCKET: ${{ secrets.S3_ENV_BUCKET }}
  API_ENV_KEY: 'api/.env'
  WORKER_ENV_KEY: 'worker/.env'

jobs:
  update-services:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-duration-seconds: 900

      - name: Download API task definition
        id: download-api-taskdef
        run: |
          aws ecs describe-task-definition \
            --task-definition ${{ secrets.ECS_TASK_DEFINITION_FAMILY }} \
            --query taskDefinition > task-definition.json

      - name: Download Worker task definition
        id: download-worker-taskdef
        run: |
          aws ecs describe-task-definition \
            --task-definition ${{ secrets.WORKER_TASK_DEFINITION_FAMILY }} \
            --query taskDefinition > worker-task-definition.json

      - name: Update API task definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        id: render-api-taskdef
        with:
          task-definition: task-definition.json
          container-name: ${{ secrets.CONTAINER_NAME }}
          image: ${{ github.event.inputs.image_uri }}

      - name: Update Worker task definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        id: render-worker-taskdef
        with:
          task-definition: worker-task-definition.json
          container-name: ${{ secrets.WORKER_CONTAINER_NAME }}
          image: ${{ github.event.inputs.image_uri }}

      - name: Deploy API to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-api-taskdef.outputs.task-definition }}
          service: ${{ secrets.ECS_SERVICE }}
          cluster: ${{ secrets.ECS_CLUSTER }}
          wait-for-service-stability: true
          wait-for-service-stability-timeout: 600
          force-new-deployment: true

      - name: Deploy Worker to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-worker-taskdef.outputs.task-definition }}
          service: ${{ secrets.WORKER_ECS_SERVICE }}
          cluster: ${{ secrets.ECS_CLUSTER }}
          wait-for-service-stability: true
          wait-for-service-stability-timeout: 600
          force-new-deployment: true

      - name: Verify deployments
        run: |
          echo "Verifying API service deployment..."
          aws ecs describe-services \
            --cluster ${{ secrets.ECS_CLUSTER }} \
            --services ${{ secrets.ECS_SERVICE }} \
            --query 'services[0].deployments[0].status'

          echo "Verifying Worker service deployment..."
          aws ecs describe-services \
            --cluster ${{ secrets.ECS_CLUSTER }} \
            --services ${{ secrets.WORKER_ECS_SERVICE }} \
            --query 'services[0].deployments[0].status'